---
layout: layouts/base.njk
bodyClass: organisateur-page protected-page
customStyles: "/assets/css/organisateur.css"
---

<div class="organisateur-header">
  <h1>{{ title }}</h1>
  <div class="organisateur-actions">
    <button id="pocket-button" class="pocket-button" aria-label="Masquer le contenu">
      <span class="icon">üëÅÔ∏è</span>
    </button>
    <button id="contrast-button" class="contrast-button" aria-label="Mode contraste √©lev√©" onclick="toggleHighContrast()">
      <span class="icon">üåô</span>
    </button>
  </div>
</div>

<div class="organisateur-content">
  {{ content | safe }}
</div>

<script>
  // V√©rifier si l'utilisateur est authentifi√©
  document.addEventListener('DOMContentLoaded', function() {
    const isAuthenticated = sessionStorage.getItem('authenticated') === 'true';
    const userRole = sessionStorage.getItem('userRole');
    
    // V√©rifier si l'utilisateur est authentifi√© et a un r√¥le valide
    if (!isAuthenticated || (userRole !== 'organisateur' && userRole !== 'pnj')) {
      // Rediriger vers la page de connexion
      window.location.href = '/login/';
      return;
    }
    
    // V√©rifier les restrictions d'acc√®s pour les PNJ
    if (userRole === 'pnj') {
      // Les PNJ ne peuvent acc√©der qu'aux pages PNJ
      const currentPath = window.location.pathname;
      const isPnjPage = currentPath.includes('/pnj/') || currentPath === '/organisateurs/pnj/';
      
      if (!isPnjPage) {
        // Rediriger vers le dashboard PNJ
        window.location.href = '/organisateurs/pnj/dashboard/';
      }
    }
  });
  
  // Fonction pour masquer rapidement le contenu
  document.getElementById('pocket-button').addEventListener('click', function() {
    document.body.classList.toggle('stealth-mode');
    
    // Changer l'ic√¥ne du bouton selon le mode
    const icon = this.querySelector('.icon');
    if (document.body.classList.contains('stealth-mode')) {
      icon.textContent = 'üëÅÔ∏è‚Äçüó®Ô∏è';
      this.setAttribute('aria-label', 'Afficher le contenu');
    } else {
      icon.textContent = 'üëÅÔ∏è';
      this.setAttribute('aria-label', 'Masquer le contenu');
    }
  });
  
  // Fonction pour basculer le mode contraste √©lev√©
  function toggleHighContrast() {
    document.body.classList.toggle('high-contrast');
    
    // Stocker la pr√©f√©rence de l'utilisateur
    const isHighContrast = document.body.classList.contains('high-contrast');
    localStorage.setItem('highContrast', isHighContrast);
    
    // Mettre √† jour le bouton de contraste
    const contrastButton = document.getElementById('contrast-button');
    const icon = contrastButton.querySelector('.icon');
    
    if (isHighContrast) {
      icon.textContent = '‚òÄÔ∏è';
      contrastButton.setAttribute('aria-label', 'Mode normal');
    } else {
      icon.textContent = 'üåô';
      contrastButton.setAttribute('aria-label', 'Mode contraste √©lev√©');
    }
  }
  
  // Appliquer les pr√©f√©rences utilisateur au chargement
  document.addEventListener('DOMContentLoaded', function() {
    const isHighContrast = localStorage.getItem('highContrast') === 'true';
    if (isHighContrast) {
      document.body.classList.add('high-contrast');
      
      const contrastButton = document.getElementById('contrast-button');
      const icon = contrastButton.querySelector('.icon');
      icon.textContent = '‚òÄÔ∏è';
      contrastButton.setAttribute('aria-label', 'Mode normal');
    }
  });
</script>